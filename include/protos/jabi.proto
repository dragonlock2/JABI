syntax = "proto3";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
package JABI;

service Device {
    /* Metadata */
    rpc serial (google.protobuf.Empty) returns (google.protobuf.StringValue);
    rpc num_inst (NumInstRequest) returns (google.protobuf.UInt32Value);
    rpc echo (google.protobuf.StringValue) returns (google.protobuf.StringValue);

    /* CAN */
    rpc can_set_filter(CANSetFilterRequest) returns (google.protobuf.Empty);
    rpc can_set_rate(CANSetRateRequest) returns (google.protobuf.Empty);
    rpc can_set_mode(CANSetModeRequest) returns (google.protobuf.Empty);
    rpc can_state(Index) returns (CANStateResponse);
    rpc can_write(CANWriteRequest) returns (google.protobuf.Empty);
    rpc can_read(Index) returns (CANReadResponse);

    /* I2C */
    rpc i2c_set_freq(I2CSetFreqRequest) returns (google.protobuf.Empty);
    rpc i2c_write(I2CWriteRequest) returns (google.protobuf.Empty);
    rpc i2c_read(I2CReadRequest) returns (google.protobuf.BytesValue);

    /* GPIO */
    rpc gpio_set_mode(GPIOSetModeRequest) returns (google.protobuf.Empty);
    rpc gpio_write(GPIOWriteRequest) returns (google.protobuf.Empty);
    rpc gpio_read(Index) returns (google.protobuf.BoolValue);

    /* PWM */
    rpc pwm_write(PWMWriteRequest) returns (google.protobuf.Empty);

    /* ADC */
    rpc adc_read(Index) returns (google.protobuf.Int32Value);
}

/* Common */
message Index {
    uint32 idx = 1;
}

/* Metadata */
enum InstID {
    METADATA = 0;
    CAN = 1;
    I2C = 2;
    GPIO = 3;
    PWM = 4;
    ADC = 5;
}

message NumInstRequest {
    InstID id = 1;
}

/* CAN */
message CANSetFilterRequest {
    uint32 id = 1;
    uint32 id_mask = 2;
    bool rtr = 3;
    bool rtr_mask = 4;
    uint32 idx = 5;
}

message CANSetRateRequest {
    uint32 bitrate = 1;
    uint32 bitrate_data = 2;
    uint32 idx = 3;
}

enum CANMode {
    NORMAL = 0;
    LOOPBACK = 1;
    LISTENONLY = 2;
}

message CANSetModeRequest {
    CANMode mode = 1;
    uint32 idx = 2;
}

message CANStateResponse {
    uint32 state = 1;
    uint32 tx_err = 2;
    uint32 rx_err = 3;
}

message CANMessage {
    uint32 id = 1;
    bool ext = 2;
    bool fd = 3;
    bool brs = 4;
    bool rtr = 5;
    bytes data = 6;
}

message CANWriteRequest {
    CANMessage msg = 1;
    uint32 idx = 2;
}

message CANReadResponse {
    int32 num_left = 1;
    CANMessage msg = 2;
}

/* I2C */
enum I2CFreq {
    STANDARD  = 0; // 100kHz
    FAST = 1;      // 400kHz
    FAST_PLUS = 2; // 1MHz
    HIGH = 3;      // 3.4MHz
    ULTRA = 4;     // 5MHz
}

message I2CSetFreqRequest {
    I2CFreq preset = 1;
    uint32 idx = 2;
}

message I2CWriteRequest {
    uint32 addr = 1;
    bytes data = 2;
    uint32 idx = 3;
}

message I2CReadRequest {
    uint32 addr = 1;
    uint32 len = 2;
    uint32 idx = 3;
}

/* GPIO */
enum GPIODir {
    INPUT = 0;
    OUTPUT = 1;
    OPEN_DRAIN = 2;
    OPEN_SOURCE = 3;
}

enum GPIOPull {
    NONE = 0;
    UP = 1;
    DOWN = 2;
    BOTH = 3;
}

message GPIOSetModeRequest {
    uint32 idx = 1;
    GPIODir dir = 2;
    GPIOPull pull = 3;
    bool init_val = 4;
}

message GPIOWriteRequest {
    uint32 idx = 1;
    bool val = 2;
}

/* PWM */
message PWMWriteRequest {
    uint32 idx = 1;
    double pulsewidth = 2;
    double period = 3;
}
